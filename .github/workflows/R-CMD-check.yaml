# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    if: ${{ contains(github.ref_name, 'create-pull-request/patch') }} == 'false' && github.actor != 'github-actions'

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-22.04, r: 'release', renv: '~/.local/share/renv'}

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_RENV_CACHE_DIR: ${{ matrix.config.renv }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::rcmdcheck
            any::knitr
            any::rmarkdown,
            any::testthat
            any::sessioninfo
          needs: |
            website
            coverage

      - name: Pandoc setup
        uses: r-lib/actions/setup-pandoc@v2

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check (rcmdcheck should be in renv.lock)
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: |
          results = rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--no-multiarch", "--no-examples"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Trigger doc workflow
        if: github.event_name == 'pull_request'
        run: |
          # Run curl -- https://stackoverflow.com/questions/38906626/curl-to-return-http-status-code-along-with-the-response
          echo "Trying with $GITHUB_PAT"
          http_response=$(curl -s -o response.txt -w "%{http_code}"  \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization:token ${{ secrets.GITHUB_TOKEN }} " \
              https://api.github.com/repos/cgauvi/sfSpHelpers/actions/workflows/24790528/dispatches \
              -d '{"ref":"master"}'
              )
          # Inspect reponse
          if [ $http_response != "204" ]; then
              echo "Error with http response"
              cat response.txt >&2
              exit 1
          fi

